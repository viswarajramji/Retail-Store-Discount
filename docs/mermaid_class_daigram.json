[{"state":{"code":"\nclassDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        <<Singleton>>\n        + double EMPLOYEE_DISCOUNT : 0.30\n        + double AFFILIATE_DISCOUNT : 0.10\n        + double LOYALTY_DISCOUNT : 0.05\n        + double PER_100_DISCOUNT : 5.00\n        - DiscountConstants() : Private constructor\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill) : Handles POST requests to calculate the discount and net payable amount based on the bill\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill) : Discount\n        + BigDecimal calculateTotalAmount(items: List<Item>) : Calculates the total amount of all items in the bill\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>) : Calculates the percentage discount based on user type and non-grocery items\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>) : Calculates the total amount of non-grocery items\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal) : Calculates the bulk discount based on the total amount\n        + BigDecimal determineMaxPercentageDiscount(user: User) : Determines the maximum percentage discount applicable based on user type and joining date\n        + boolean isLongTermCustomer(user: User) : Checks if the user is a long-term customer (more than 2 years)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>) : Constructor to initialize Bill\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String) : Constructor to initialize Discount\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal) : Constructor to initialize Item\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate) : Constructor to initialize User\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    DiscountService --> Discount : returns\n    Bill ..> User : uses\n    Bill ..> Item : uses (1 to many)\n    Item ..> ItemType : type\n    User ..> UserType : userType\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722186024666,"type":"auto","id":"2a2565f5-a8d8-432d-8c2d-ece285e46863","name":"glamorous-exabyte"},{"state":{"code":"classDiagram\n\n    %% DiscountConstants\n    class DiscountConstants {\n        <<Singleton>>\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill) : Discount\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    \n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    DiscountService --> Discount : returns\n    Bill ..> User : uses\n    Bill ..> Item : uses (1 to many)\n    Item ..> ItemType : type\n    User ..> UserType : userType\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185965188,"type":"auto","id":"2d3fb762-0e9a-408d-922f-1167e9180d7f","name":"many-apple"},{"state":{"code":"classDiagram\n   \n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill) : Discount\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    DiscountService --> Discount : returns\n    Bill ..> User : uses\n    Bill ..> Item : uses (1 to many)\n    Item ..> ItemType : type\n    User ..> UserType : userType","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185904671,"type":"auto","id":"2ab0cd68-528d-4275-a50b-a22d087177c2","name":"witty-portugal"},{"state":{"code":"classDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        <<Singleton>>\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill) : Discount\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    DiscountService --> Discount -->: returns\n    Bill ..> User : uses\n    Bill ..> Item : uses (1 to many)\n    Item ..> ItemType : type\n    User ..> UserType : userType","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185844669,"type":"auto","id":"3bb4ee53-e826-4268-b5e3-7c4274115459","name":"faint-beard"},{"state":{"code":"classDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        <<Singleton>>\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill)\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    Bill ..> User : uses\n    Bill ..> Item : uses (1 to many)\n    Item ..> ItemType : type\n    User ..> UserType : userType\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185785188,"type":"auto","id":"e3af8ee9-08e9-4526-8ca7-545c4395b82f","name":"prickly-leather"},{"state":{"code":"classDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        <<Singleton>>\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill)\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    Bill ..> User : uses\n    Bill ..> Item : uses (1 to many)\n    Item ..> ItemType : uses\n    User ..> UserType : uses\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185725173,"type":"auto","id":"fb434ed1-169b-4bf0-a0d5-264b82727acf","name":"hundreds-businessperson"},{"state":{"code":"\nclassDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill)\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    Bill ..> User : uses\n    Bill ..> Item : uses (1 to many)\n    Item.itemType ..> ItemType : uses\n    User.userType ..> UserType : uses\n\n\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185665175,"type":"auto","id":"dfb34ff7-d2fd-4450-b42f-7086a035d7c7","name":"hundreds-sundown"},{"state":{"code":"\nclassDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill)\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    Bill ..> User : uses\n    Bill ..> Item : uses\n    Item ..> ItemType : uses\n    User ..> UserType : uses\n\n\n\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185604673,"type":"auto","id":"9b864ccc-10bc-4c09-a7e8-9f9e8ec77b62","name":"obedient-pharmacist"},{"state":{"code":"\nclassDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill)\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    Bill ..> User : users\n    Bill ..> Item : calculates\n    DiscountService ..> User : calculates\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185544671,"type":"auto","id":"309bb7ea-5196-48de-83b8-97959815fba6","name":"tall-petabyte"},{"state":{"code":"\nclassDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n        <<Singleton>>\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill)\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    DiscountService ..> Bill : calculates\n    DiscountService ..> Item : calculates\n    DiscountService ..> User : calculates\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185484689,"type":"auto","id":"824fb615-4f02-4f81-9f87-532513195fc9","name":"green-rain"},{"state":{"code":"classDiagram\n    %% DiscountConstants\n    class DiscountConstants {\n\n        + double EMPLOYEE_DISCOUNT\n        + double AFFILIATE_DISCOUNT\n        + double LOYALTY_DISCOUNT\n        + double PER_100_DISCOUNT\n        - DiscountConstants()\n    }\n\n    %% DiscountController\n    class DiscountController {\n        + DiscountService discountService\n        + ResponseEntity<Discount> calculateNetPayableAmount(bill: Bill)\n    }\n\n    %% DiscountService\n    class DiscountService {\n        + Discount calculateNetPayableAmount(bill: Bill)\n        + BigDecimal calculateTotalAmount(items: List<Item>)\n        + BigDecimal calculatePercentageDiscount(user: User, items: List<Item>)\n        + BigDecimal calculateTotalNonGroceryAmount(items: List<Item>)\n        + BigDecimal calculateBulkDiscount(totalAmount: BigDecimal)\n        + BigDecimal determineMaxPercentageDiscount(user: User)\n        + boolean isLongTermCustomer(user: User)\n    }\n\n    %% Bill\n    class Bill {\n        + String billId\n        + User user\n        + List<Item> items\n        + Bill(billId: String, user: User, items: List<Item>)\n    }\n\n    %% Discount\n    class Discount {\n        + String totalAmount\n        + String discountedAmount\n        + Discount(totalAmount: String, discountedAmount: String)\n    }\n\n    %% Item\n    class Item {\n        + String itemId\n        + String name\n        + int quantity\n        + ItemType type\n        + BigDecimal totalPrice\n        + Item(itemId: String, name: String, quantity: int, type: ItemType, totalPrice: BigDecimal)\n    }\n\n    %% User\n    class User {\n        + String userId\n        + String userName\n        + UserType userType\n        + LocalDate joiningDate\n        + User(userId: String, userName: String, userType: UserType, joiningDate: LocalDate)\n    }\n\n    %% Enums\n    class ItemType {\n        + GROCERIES\n        + NON_GROCERIES\n    }\n\n    class UserType {\n        + EMPLOYEE\n        + AFFILIATE\n        + CUSTOMER\n    }\n\n    %% Relationships\n    DiscountController --> DiscountService : uses\n    DiscountService --> Bill : uses\n    DiscountService --> Item : uses\n    DiscountService --> User : uses\n    Bill --> User : contains\n    Bill --> Item : contains\n    Item --> ItemType : uses\n    User --> UserType : uses\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1722185364674,"type":"auto","id":"b4954e95-fd41-448e-abf8-1d42d40185b7","name":"careful-pizza"}]